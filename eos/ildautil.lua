local bit32 = require("bit32")

IldaUtil = {}

function IldaUtil.bytesToShort(bytes)
    local value = bit32.bor(bit32.lshift(bytes[1], 8), bit32.band(bytes[2], 0xFF))
    if value >= 0x8000 then
        value = -(0x10000 - value)
    end
    return value
end

function IldaUtil.shortToBytes(value)
    local bytes = {
        bit32.band(bit32.rshift(value, 8), 0xFF),
        bit32.band(value, 0xFF)
    }
    return bytes
end

function IldaUtil.RGBToHexString(rgb)
    return string.format("#%02x%02x%02x", rgb[1], rgb[2], rgb[3])
end

IldaUtil.DEFAULT_PALETTE = {
    {255, 0, 0},
    {255, 16, 0},
    {255, 32, 0},
    {255, 48, 0},
    {255, 64, 0},
    {255, 80, 0},
    {255, 96, 0},
    {255, 112, 0},
    {255, 128, 0},
    {255, 144, 0},
    {255, 160, 0},
    {255, 176, 0},
    {255, 192, 0},
    {255, 208, 0},
    {255, 224, 0},
    {255, 240, 0},
    {255, 255, 0},
    {224, 255, 0},
    {192, 255, 0},
    {160, 255, 0},
    {128, 255, 0},
    {96, 255, 0},
    {64, 255, 0},
    {32, 255, 0},
    {0, 255, 0},
    {0, 255, 36},
    {0, 255, 73},
    {0, 255, 109},
    {0, 255, 146},
    {0, 255, 182},
    {0, 255, 219},
    {0, 255, 255},
    {0, 227, 255},
    {0, 198, 255},
    {0, 170, 255},
    {0, 142, 255},
    {0, 113, 255},
    {0, 85, 255},
    {0, 56, 255},
    {0, 28, 255},
    {0, 0, 255},
    {32, 0, 255},
    {64, 0, 255},
    {96, 0, 255},
    {128, 0, 255},
    {160, 0, 255},
    {192, 0, 255},
    {224, 0, 255},
    {255, 0, 255},
    {255, 32, 255},
    {255, 64, 255},
    {255, 96, 255},
    {255, 128, 255},
    {255, 160, 255},
    {255, 192, 255},
    {255, 224, 255},
    {255, 255, 255},
    {255, 224, 224},
    {255, 192, 192},
    {255, 160, 160},
    {255, 128, 128},
    {255, 96, 96},
    {255, 64, 64},
    {255, 32, 32}
  }



return IldaUtil
